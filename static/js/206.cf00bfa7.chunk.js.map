{"version":3,"file":"static/js/206.cf00bfa7.chunk.js","mappings":"uQACaA,EAAQC,EAAAA,GAAAA,MAAH,oeAsBLC,EAASD,EAAAA,GAAAA,OAAH,0Y,mBClBbE,EAAgBC,EAAAA,KAAaC,MAAM,CACvCC,KAAMF,EAAAA,KACHG,QACC,yHACA,gBAEDC,SAAS,oBACZC,OAAQL,EAAAA,KACLG,QACC,8EACA,+BAEDC,SAAS,sBAEDE,EAAc,WACzB,OAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eACA,OACE,SAAC,KAAD,CACEC,cAAe,CAAEP,KAAM,GAAIG,OAAQ,IACnCK,SAAU,SAACC,EAAQC,GACjBJ,GAAW,UAAKG,IAChBC,EAAQC,WACT,EACDC,iBAAkBf,EANpB,UAQE,UAAC,KAAD,YACE,UAACH,EAAD,YACE,yBAAK,UACL,SAAC,KAAD,CAAOmB,KAAK,OAAOb,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,OAAOc,UAAU,aAEtC,UAACpB,EAAD,YACE,yBAAK,YACL,SAAC,KAAD,CAAOmB,KAAK,MAAMb,KAAK,YACvB,SAAC,KAAD,CAAcA,KAAK,SAASc,UAAU,aAGxC,SAAClB,EAAD,CAAQiB,KAAK,SAAb,SAAsB,oBAI7B,EC7CYE,EAAKpB,EAAAA,GAAAA,GAAH,sEAIFC,EAASD,EAAAA,GAAAA,OAAH,+XAkBNqB,EAAKrB,EAAAA,GAAAA,GAAH,kb,UCvBFsB,EAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAV,E,UCIxBC,GAAOC,EAAAA,EAAAA,IAAH,uGAUGC,GAAU3B,EAAAA,EAAAA,IAAO4B,EAAAA,IAAP5B,CAAH,wHAILyB,GAGfE,EAAQE,aAAe,CACrBC,KAAM,ICbD,I,IAAMC,EAAc,WACzB,OAA8CC,EAAAA,EAAAA,MAAhCC,EAAd,EAAQC,KAAgBC,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,WAC/B,GAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eACMd,GAASe,EAAAA,EAAAA,IAAYjB,GAQ3B,OACE,gCACGc,IAAc,SAACT,EAAD,IACdQ,IAAS,uBAAIA,EAAMD,OACnBD,IACC,SAACb,EAAD,UAXmB,SAAAI,GACvB,OAAOS,EAAST,QAAO,SAAAgB,GAAO,OAC5BA,EAAQnC,KAAKoC,cAAcC,SAASlB,EAAOiB,cADf,GAG/B,CAQQE,CAAiBnB,GAAQoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIxC,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OAC5B,UAACa,EAAD,YACE,2BACGhB,EAAK,KAAGG,MAEX,SAAC,EAAD,CAAQsC,QAAS,kBAAMR,EAAcO,EAApB,EAAyB3B,KAAK,SAA/C,SAAwD,aAJjD2B,EADmB,QAcvC,ECvCYE,EAAK/C,EAAAA,GAAAA,GAAH,yFAKFgD,EAAQhD,EAAAA,GAAAA,MAAH,2I,UCFLiD,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcb,EAAAA,EAAAA,IAAYjB,GAChC,OACE,iCACE,SAACyB,EAAD,UAAI,kBACJ,SAACC,EAAD,CACEK,SAAU,SAAAC,GAAC,OAAIJ,GAASK,EAAAA,EAAAA,GAAcD,EAAEE,cAAcC,OAA3C,EACXA,MAAOL,EAAY5B,OACnBN,KAAK,OACLb,KAAK,aAIZ,E,UCbc,SAASqD,IACtB,OACE,iCACE,SAACC,EAAA,EAAD,WACE,2BAAO,gBAET,gCACE,wBAAI,eACJ,SAAClD,EAAD,KACA,wBAAI,cACJ,SAACwC,EAAD,KACA,SAAClB,EAAD,SAIP,C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","redux/filter/selectors.js","components/Spinner/Spinner.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  div {\n    margin-right: 5px;\n    font-weight: 600;\n  }\n  input {\n    margin: 5px 0px;\n    border-radius: 8px;\n    border: 1px solid black;\n    font-weight: 500;\n  }\n  span {\n    display: flex;\n    justify-content: center;\n    color: red;\n    font-weight: 500;\n    text-shadow: 2px 0 #fff, -2px 0 #fff, 0 2px #fff, 0 -2px #fff, 1px 1px #fff,\n      -1px -1px #fff, 1px -1px #fff, -1px 1px #fff;\n  }\n`;\nexport const Button = styled.button`\n  width: auto;\n  height: auto;\n  padding: 7px 9px;\n  background-color: rgb(255, 255, 255);\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 5px;\n  border: 1px solid rgb(172, 172, 172);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 6px -2px;\n  outline: none;\n  transition: all 0.25s ease 0s;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Label, Button } from './ContactForm.styled';\nimport { useAddContactsMutation } from 'redux/contacts/operations';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Invalid name'\n    )\n    .required('Obligatory field'),\n  number: Yup.string()\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Invalid phone number format'\n    )\n    .required('Obligatory field'),\n});\nexport const ContactForm = () => {\n  const [addContact] = useAddContactsMutation();\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={(values, actions) => {\n        addContact({ ...values });\n        actions.resetForm();\n      }}\n      validationSchema={contactSchema}\n    >\n      <Form>\n        <Label>\n          <div>Name</div>\n          <Field type=\"text\" name=\"name\"></Field>\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </Label>\n        <Label>\n          <div>Number</div>\n          <Field type=\"tel\" name=\"number\"></Field>\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nexport const Ul = styled.ul`\n  list-style: none;\n  display: inline-grid;\n`;\nexport const Button = styled.button`\n  width: auto;\n  height: auto;\n  padding: 7px 9px;\n  background-color: #fff;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 5px;\n  border: 1px solid #acacac;\n  box-shadow: 0 2px 6px -2px rgba(0, 0, 0, 0.2);\n  outline: none;\n  transition: 0.25s ease;\n  cursor: pointer;\n  &:hover {\n    background-color: #ff0000;\n    color: white;\n  }\n`;\nexport const Li = styled.li`\n  display: inline-flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 7px 9px;\n  background-color: #fff;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 5px;\n  border: 1px solid #acacac;\n  box-shadow: 0 2px 6px -2px rgba(0, 0, 0, 0.2);\n  outline: none;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  div {\n    margin-right: 15px;\n  }\n`;\n","export const getFilter = state => state.filter;\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\nimport { PiSpinner } from 'react-icons/pi';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(PiSpinner)`\n  display: flex;\n  margin: auto;\n  margin-top: 20px;\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 40,\n};\n","import { Ul, Button, Li } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter/selectors';\nimport {\n  useDeleteContactsMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/operations';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nexport const ContactList = () => {\n  const { data: contacts, error, isFetching } = useGetContactsQuery();\n  const [deleteContact] = useDeleteContactsMutation();\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = filter => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <>\n      {isFetching && <Spinner />}\n      {error && <p>{error.data}</p>}\n      {contacts && (\n        <Ul>\n          {filteredContacts(filter).map(({ id, name, number }) => (\n            <Li key={id}>\n              <div>\n                {name}: {number}\n              </div>\n              <Button onClick={() => deleteContact(id)} type=\"button\">\n                Delete\n              </Button>\n            </Li>\n          ))}\n        </Ul>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nexport const H2 = styled.h2`\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  border-radius: 8px;\n  border: 2px solid black;\n  font-weight: 500;\n  display: block;\n  margin-inline: auto;\n`;\n","import { H2, Input } from './Filter.styled';\nimport { setFilterName } from 'redux/filter/slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter/selectors';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n  return (\n    <>\n      <H2>Find by Name</H2>\n      <Input\n        onChange={e => dispatch(setFilterName(e.currentTarget.value))}\n        value={filterValue.filter}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Helmet } from 'react-helmet';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <section>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </section>\n    </>\n  );\n}\n"],"names":["Label","styled","Button","contactSchema","Yup","shape","name","matches","required","number","ContactForm","useAddContactsMutation","addContact","initialValues","onSubmit","values","actions","resetForm","validationSchema","type","component","Ul","Li","getFilter","state","filter","spin","keyframes","Spinner","PiSpinner","defaultProps","size","ContactList","useGetContactsQuery","contacts","data","error","isFetching","useDeleteContactsMutation","deleteContact","useSelector","contact","toLowerCase","includes","filteredContacts","map","id","onClick","H2","Input","Filter","dispatch","useDispatch","filterValue","onChange","e","setFilterName","currentTarget","value","Contacts","Helmet"],"sourceRoot":""}